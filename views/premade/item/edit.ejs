<% include ../../head.ejs %>
<% include ./../sidebar.ejs %>

<div class="sidebar-push">
    <div class="container" id="form-container">

        <h2>Edit Item for <%- category.name %></h2>

        <form id="itemForm" method="post" action="/premade/category/<%- category.id %>/new" enctype='multipart/form-data'>

            <input type="hidden" name="dbID" value="<%- db.id %>">

            <% // Use 'item' or 'document' consistency. Assuming 'type' is the item object. %>
            <% // Conditionally set a hidden ID field for existing items. %>
            <% if (typeof type !== 'undefined' && type.id) { %>
                <input type="hidden" name="id" id="id" value="<%- type.id %>">
            <% } %>

            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" value="<%- type.name || '' %>" required>
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                <input type="text" name="description" id="description" value="<%- type.description || '' %>">
            </div>

            <div class="form-group">
                <label for="level">Level</label>
                <select name="level" id="level">
                    <option value="null" <%- type.level === 'Unknown' || type.level === null ? 'selected' : '' %>>Unknown</option>
                    <option value="0" <%- type.level === '0' ? 'selected' : '' %>>Level 0</option>
                    <option value="1" <%- type.level === '1' ? 'selected' : '' %>>Level 1</option>
                    <option value="2" <%- type.level === '2' ? 'selected' : '' %>>Level 2</option>
                    <option value="M" <%- type.level === 'M' ? 'selected' : '' %>>Level M</option>
                    <option value="P" <%- type.level === 'P' ? 'selected' : '' %>>Level P</option>
                    <option value="-1 (pUAP)" <%- type.level === '-1 (pUAP)' ? 'selected' : '' %>>Level -1 (pUAP)</option>
                </select>
            </div>

            <br />

            <% /* Citation Section */ %>
            <div class="form-group">
                <label>Relevant publications</label>

                <% if (type.citations && type.citations.length) { %>
                    <div id='display-citations'>
                        <table>    
                            <thead>
                                <tr>
                                    <th>URL</th>
                                    <th>Description</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="citation-list-display">
                                <% type.citations.forEach(function (citationObj, index) { %>
                                    <tr data-citation-index="<%= index %>">
                                        <td><a href="<%= citationObj.url %>" target="_blank" rel="noopener noreferrer"><%= citationObj.url %></a></td>
                                        <td><%= citationObj.description %></td>
                                        <td>
                                            <button type="button" class="button danger outline remove-citation" data-index="<%= index %>">Remove</button>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                        <p style="margin-top: 10px;">
                            <a href="#" id="reset-citations-link">Reset all citations (re-add empty fields below)</a>
                        </p>
                    </div>
                <% } %>

                <div id="new-citation-fields" class="citation-fields-group">
                    <% if (!(type.citations && type.citations.length)) { %>
                        <% /* Initial empty citation fields if no citations or citations were reset */ %>
                        <div class="citation-entry">
                            <table>
                                <tr>
                                    <td>
                                        <div style="display:flex;flex-direction:column">
                                            <div>Publication URL</div>
                                            <div><i>(<b>MUST</b> use http:// or https:// for external links)</i></div>
                                        </div>
                                    </td>
                                    <td><input type="text" name="linkurl[]" value=""></td>
                                </tr>
                                <tr>
                                    <td>Publication Description:</td>
                                    <td><textarea name="linkdesc[]" cols="50" rows="5"></textarea></td>
                                </tr>
                            </table>
                        </div>
                    <% } %>
                </div>
                <p id="add-new-citation-link-wrapper" style='margin-top: 10px;'>
                    <a href="#" id="add-new-citation-link">Add Another Publication</a>
                </p>

                <% /* Citation Template (Hidden) */ %>
                <div id="citation-template" style="display:none;">
                    <div class="citation-entry">
                        <table>
                            <tr>
                                <td>
                                    <div style="display:flex;flex-direction:column">
                                        <div>Publication URL</div>
                                        <div><i>(<b>MUST</b> use http:// or https:// for external links)</i></div>
                                    </div>
                                </td>
                                <td><input type="text" name="linkurl[]" value=""></td>
                            </tr>
                            <tr>
                                <td>Publication Description:</td>
                                <td><textarea name="linkdesc[]" cols="50" rows="5"></textarea></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="comments">Comments</label>
                <input type="text" name="comments" id="comments" value="<%- type.comments || '' %>">
            </div>

            <% type.fields && type.fields.forEach(function(field){ %> <% /* Ensure type.fields exists */ %>
                <div class="form-group">
                    <label for="<%- field.name %>"><%- field.text %></label>
                    <input 
                        type="<%- field.type %>" 
                        id="<%- field.name %>" 
                        name="<%- field.name %>"
                        value="<%- type[field.name] || '' %>" 
                        <%= field.required ? 'required' : '' %> <% /* Add required conditionally */ %>
                    >
                </div>
            <% }); %>

            <div class="form-group">
                <label for="concentration">Concentration (MUST be finite number or leave empty)</label>
                <input type="text" name="concentration" id="concentration" value="<%- type.concentration || '' %>">
            </div>
            <div class="form-group">
                <label for="synBioID">SynBio ID (Mark's Labelling)</label>
                <input type="text" name="synBioID" id="synBioID" value="<%- type.synBioID || '' %>">
            </div>

            <div class="form-group">
                <label for="note">Admin note</label>
                <input type="text" name="note" id="note" value="<%- type.note || '' %>">
            </div>

            <div class="form-group">
                <label for="mapFile"><b>MAP file</b></label>
                <% if(type.mapFile){ %>
                    <span>Currently: <a href="<%- type.mapFile.downloadPath() %>" target="_blank" rel="noopener noreferrer"><%- type.mapFile.originalName %></a></span>
                    <br>
                <% } %>
                <input type="file" id="mapFile" name="mapFile">
            </div>

            <div class="form-group">
                <p><i>(<b>N.B.</b> please press save in order to be able to start editing sequence files.)</i></p>
            </div>

            <div class="form-group">
                <label for="documentation">documentation</label>
                <textarea class="wide" id="documentation" name="documentation"><%- type.documentation %></textarea>
            </div>

            <div class="form-group">
                <label for="includeonrecentlyadded">Include on recently added list?</label>
                <input
                    type="checkbox"
                    name="includeonrecentlyadded"
                    id="includeonrecentlyadded"
                    <%- type.includeOnRecentlyAdded ? 'checked' : '' %>
                >
            </div>

            <div class="form-group">
                <button type="submit" class="success">Save</button>
            </div>
        </form>

    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // --- Citation Management ---
    const newCitationFieldsContainer = document.getElementById('new-citation-fields');
    const addCitationLink = document.getElementById('add-new-citation-link');
    const citationTemplate = document.getElementById('citation-template');
    const resetCitationsLink = document.getElementById('reset-citations-link');
    const displayCitationsDiv = document.getElementById('display-citations');
    const citationListDisplayBody = document.getElementById('citation-list-display');

    // Function to add a new empty citation field
    function addNewCitationField() {
        if (!citationTemplate) return;
        const templateContent = citationTemplate.querySelector('.citation-entry').cloneNode(true);
        const inputUrl = templateContent.querySelector('input[name="linkurl[]"]');
        const textareaDesc = templateContent.querySelector('textarea[name="linkdesc[]"]');
        if (inputUrl) inputUrl.value = '';
        if (textareaDesc) textareaDesc.value = '';
        newCitationFieldsContainer.appendChild(templateContent);
    }

    // Event listener for "Add Another Publication"
    if (addCitationLink) {
        addCitationLink.addEventListener('click', function(e) {
            e.preventDefault();
            addNewCitationField();
        });
    }

    // Event listener for "Reset all citations"
    if (resetCitationsLink) {
        resetCitationsLink.addEventListener('click', function(e) {
            e.preventDefault();
            if (confirm('Are you sure you want to reset all current citations? This will remove existing ones and add new empty fields.')) {
                if (displayCitationsDiv) {
                    displayCitationsDiv.style.display = 'none';
                }
                newCitationFieldsContainer.innerHTML = '';
                addNewCitationField();
                const addnewWrapper = document.getElementById('add-new-citation-link-wrapper');
                if (addnewWrapper) addnewWrapper.style.display = '';
            }
        });
    }

    // Event listener for "Remove" button on existing citations (delegated)
    if (citationListDisplayBody) {
        citationListDisplayBody.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-citation')) {
                e.preventDefault();
                const button = e.target;
                const row = button.closest('tr');
                if (row && confirm('Are you sure you want to remove this publication? This change will be permanent once you save the item.')) {
                    row.remove();
                }
            }
        });
    }

    function validateConcentration() {
        const concentrationInput = document.getElementById('concentration');
        if (!concentrationInput) return true; // If input not found, assume valid

        const value = concentrationInput.value.trim();

        if (value === '') {
            return true; // Empty is allowed
        }

        // Check if it's a valid number (integer or float)
        const isNumeric = /^-?\d+(\.\d+)?$/.test(value);

        if (!isNumeric) {
            alert('Error: Concentration must be a finite number (e.g., 10, 5.5, or empty).');
            concentrationInput.focus();
            return false;
        }

        return true;
    }

    // --- Form Submission Handler (Pre-validation) ---
    const itemForm = document.getElementById('itemForm');
    if (itemForm) {
        itemForm.addEventListener('submit', function(event) {
            if (!validateConcentration()) {
                event.preventDefault(); // Stop form submission
                return;
            }
            // Add other pre-submission validations here if any
        });
    }
});
</script>

<% include ../../foot.ejs %>